services:
  postgres:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.5
    command:
      - "start"
      ##- "--http-port=8080"
      - "--import-realm"
      #- "--optimized"
    healthcheck:
      test: curl --fail http://localhost:8080/health --insecure || exit 1
      interval: 10s
      timeout: 1s
      retries: 30
      start_period: 60s
    environment:
      KC_HOSTNAME: my.keycloak.org
      #KC_HOSTNAME_ADMIN: admin.keycloak.org
      #KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT_BACKCHANNEL: true
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KEYCLOAK_IMPORT: /opt/keycloak/data/import/realm-export.json
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: ${POSTGRES_DB}
    volumes:
      - ./docker/keycloak:/opt/keycloak/data/import
    ports:
      - 8080:8080
      - 8443:8443
    networks:
      default:
        aliases:
        - keycloak-admin-srv
        #- admin.keycloak.org
    restart: always
    depends_on:
      - postgres
  haproxy:
    image: haproxy:alpine
    restart: always
    # healthcheck:
    #   test: curl --fail http://localhost:8080/health --insecure || exit 1
    #   interval: 10s
    #   timeout: 1s
    #   retries: 30
    #   start_period: 60s
    #depends_on:
      #keycloak:
        #condition: service_healthy
    ports:
      - "80:80"
    volumes:
      - "./docker/haproxy:/usr/local/etc/haproxy"
      #- "./localcerts:/tmp/certs"
    networks:
      default:
        aliases:
        - admin.keycloak.org
        - my.keycloak.org
networks:
  default:
    name: keycloak_network
volumes:
  postgres_data:
